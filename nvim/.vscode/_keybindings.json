[
    {
        "key": "shift+cmd+a",
        "command": "wwm.aligncode"
    },
    {
        "key": "ctrl+e",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "tab",
        "command": "-editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-cursorLineEnd",
        "when": "textInputFocus"
    },
    {
        "key": "alt+cmd+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "cmd+s",
        "command": "searchEditorApplyChanges.apply",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+t",
        "command": "editor.emmet.action.balanceOut"
    },
    {
        "key": "ctrl+y",
        "command": "editor.emmet.action.balanceIn"
    },
    {
        "key": "shift+cmd+e",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+f2",
        "command": "-editor.action.changeAll",
        "when": "editorTextFocus && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "shift+cmd+t",
        "command": "better-phpunit.run",
        "when": "editorLangId == 'php'"
    },
    {
        "key": "cmd+k cmd+r",
        "command": "-better-phpunit.run",
        "when": "editorLangId == 'php'"
    },
    {
        "key": "ctrl+h",
        "command": "extension.vim_navigateLeft",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "extension.vim_navigateRight",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "extension.vim_navigateDown",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "extension.vim_navigateUp",
        "when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+k",
        "command": "extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+p",
        "command": "-extension.vim_ctrl+p",
        "when": "suggestWidgetVisible && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "!suggestWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "!suggestWidgetVisible"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+alt+v",
        "command": "toggleVim"
    },
    {
        "key": "shift+alt+j",
        "command": "editor.action.moveLinesDownAction"
    },
    {
        "key": "shift+alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+r",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+a",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "extension.vim_end",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+alt+i",
        "command": "references-view.findImplementations"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+h",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "shift+cmd+l",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+i",
        "command": "addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+i",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+i",
        "command": "selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+cmd+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+cmd+i",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+k",
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "line",
            "value": 25
        },
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+j",
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "line",
            "value": 25
        },
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+u",
        "command": "workbench.action.toggleEditorWidths"
    },
    {
        "key": "shift+cmd+8",
        "command": "phpdoc-generator.generatePHPDoc",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-phpdoc-generator.generatePHPDoc",
        "when": "editorTextFocus"
    },
    {
        "command": "vscode-neovim.compositeEscape1",
        "key": "j",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "j"
    },
    {
        "command": "vscode-neovim.compositeEscape2",
        "key": "k",
        "when": "neovim.mode == insert && editorTextFocus",
        "args": "k"
    },
    {
        "key": "cmd+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "command": "vscode-neovim.send",
        "key": "ctrl+n",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": "<C-n>"
    },
    {
        "command": "vscode-neovim.send",
        "key": "cmd+]",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": "<D-]>"
    },
    {
        "command": "vscode-neovim.send",
        "key": "cmd+[",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": "<D-[>"
    },
    {
        "key": "ctrl+d",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && neovim.ctrlKeysInsert && !neovim.recording && neovim.mode == 'insert'"
    },
    {
        "key": "ctrl+d",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-vscode-neovim.ctrl-d",
        "when": "editorTextFocus && neovim.ctrlKeysNormal && neovim.init && neovim.mode != 'insert'"
    },
    {
        "command": "vscode-neovim.send",
        "key": "ctrl+d",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": "<C-d>"
    },
    {
        "command": "vscode-neovim.send",
        "key": "cmd+/",
        "when": "editorTextFocus && neovim.mode != insert",
        "args": "<D-/>"
    },
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "l",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "o",
        "command": "list.toggleExpand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "fcd\n"
        },
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001b[B"
        },
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001b[A"
        },
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "workbench.action.navigateUp",
        "when": "!suggestWidgetVisible"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "workbench.action.navigateDown",
        "when": "!suggestWidgetVisible"
    },
    {
        "key": "ctrl+cmd+h",
        "command": "workbench.action.navigateLeft",
        "when": "!suggestWidgetVisible"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "workbench.action.navigateRight",
        "when": "!suggestWidgetVisible"
    },
    {
        "key": "shift+cmd+o",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.mode != 'insert'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+cmd+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+cmd+l",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusUp",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "search.action.focusSearchList",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.findInFiles",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "cmd+.",
        "command": "keyboard-quickfix.openQuickFix"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown",
        "when": "explorerViewletVisible && filesExplorerFocus && inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusUp",
        "when": "explorerViewletVisible && filesExplorerFocus && inputFocus"
    }
]